pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = ''          // add registry URL if needed
        IMAGE_NAME = 'python-app'
        TAG = "${env.BUILD_NUMBER}"
        SONARQUBE = 'SonarQube'       // Jenkins SonarQube server name (from Manage Jenkins -> Configure System)
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'python3.9 -m pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    pytest --junitxml=report.xml || [ $? -eq 5 ]
                '''
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE}") {
                    sh '''
                        sonar-scanner \
                          -Dsonar.projectKey=python-app \
                          -Dsonar.sources=. \
                          -Dsonar.python.version=3.9 \
                          -Dsonar.host.url=$SONAR_HOST_URL \
                          -Dsonar.login=$SONAR_AUTH_TOKEN
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                    docker build -t ${DOCKER_REGISTRY}/${IMAGE_NAME}:${TAG} .
                '''
            }
        }

        stage('Push Docker Image') {
            when {
                expression { env.DOCKER_REGISTRY?.trim() }
            }
            steps {
                sh '''
                    echo "Pushing image to registry..."
                    docker push ${DOCKER_REGISTRY}/${IMAGE_NAME}:${TAG}
                '''
            }
        }
    }
}
